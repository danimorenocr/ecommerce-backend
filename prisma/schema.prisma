generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CLIENT
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role      @default(CLIENT)
  createdAt DateTime @default(now())
  carts     Cart[]
  orders    Order[]
  products  Product[] 
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  imageUrl    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  createdById Int
  createdBy   User      @relation(fields: [createdById], references: [id], onDelete: Restrict)
  cartItems   CartItem[]
  orderItems  OrderItem[]

  @@index([createdById])
}

model Cart {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime   @default(now())
  items     CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}

model Order {
  id        Int          @id @default(autoincrement())
  user      User         @relation(fields: [userId], references: [id])
  userId    Int
  total     Float
  status    String       @default("PENDING")
  createdAt DateTime     @default(now())
  items     OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}

